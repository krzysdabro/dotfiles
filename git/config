[alias]
  a  = add
  c  = commit
  co = checkout
  cb = checkout -b
  d  = diff --patch-with-stat
  dc = diff --patch-with-stat --cached
  dw = diff --patch-with-stat --word-diff
  l  = log --oneline
  m  = merge --ff --squash
  s  = status -sb

  amend          = commit --amend --no-edit
  upush          = "!git push -u ${1:-origin} $(git current-branch)"
  fpush          = push --force-with-lease
  current-branch = rev-parse --abbrev-ref HEAD
  my-commits     = "!git l --author=$(git config user.email)"

  ## GitLab specific commands
  make-mr       = "!f(){ git push -o merge_request.create -o merge_request.remove_source_branch -o merge_request.squash -o merge_request.target=${1:-$(basename $(git symbolic-ref --short refs/remotes/origin/HEAD))}; }; f"
  make-draft-mr = "!f(){ git push -o merge_request.create -o merge_request.remove_source_branch -o merge_request.squash -o merge_request.target=${1:-$(basename $(git symbolic-ref --short refs/remotes/origin/HEAD))} -o merge_request.draft; }; f"

[filter "lfs"]
  clean    = git-lfs clean -- %f
  smudge   = git-lfs smudge -- %f
  process  = git-lfs filter-process
  required = true

[branch]
  sort = -committerdate

[column]
  ui = auto

[commit]
  gpgsign = true
  verbose = true

[core]
  hooksPath = ~/.config/git/hooks

[diff]
  algorithm  = histogram
  renames    = true
  colorMoved = plain

[fetch]
  all       = true
  prune     = true
  pruneTags = true

[gpg]
  format = ssh

[init]
  defaultBranch = main

[pull]
  rebase = true

[push]
  autoSetupRemote = true
  followTags      = true
  default         = simple

[rebase]
  autoSquash = true
  autoStash  = true
  updateRefs = true

[rerere]
  autoUpdate = true
  enabled    = true

[tag]
  gpgsign = true
  sort    = version:refname

[url "git@github.com:"]
  pushInsteadOf = "https://github.com/"

[include]
  path = ~/.config/git/config.user
